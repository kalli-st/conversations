import com.android.build.OutputFile

// Top-level build file where you can add configuration options common to all
// sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
    mavenCentral()
    jcenter()
}

configurations {
    playstoreImplementation
    compatImplementation
    conversationsFreeCompatImplementation
    conversationsPlaystoreCompatImplementation
    conversationsPlaystoreSystemImplementation
    quicksyPlaystoreCompatImplementation
    quicksyPlaystoreSystemImplementation
    quicksyFreeCompatImplementation
    quicksyImplementation
}

dependencies {
    implementation 'androidx.viewpager:viewpager:1.0.0'

    playstoreImplementation('com.google.firebase:firebase-messaging:22.0.0') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }
    conversationsPlaystoreCompatImplementation("com.android.installreferrer:installreferrer:2.2")
    conversationsPlaystoreSystemImplementation("com.android.installreferrer:installreferrer:2.2")
    quicksyPlaystoreCompatImplementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'
    quicksyPlaystoreSystemImplementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'
    implementation 'org.sufficientlysecure:openpgp-api:10.0'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.emoji:emoji:1.1.0'
    implementation 'com.google.android.material:material:1.3.0'
    compatImplementation 'androidx.emoji:emoji-appcompat:1.1.0'
    conversationsFreeCompatImplementation 'androidx.emoji:emoji-bundled:1.1.0'
    quicksyFreeCompatImplementation 'androidx.emoji:emoji-bundled:1.1.0'
    implementation 'org.bouncycastle:bcmail-jdk15on:1.64'
    //zxing stopped supporting Java 7 so we have to stick with 3.3.3
    //https://github.com/zxing/zxing/issues/1170
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'de.measite.minidns:minidns-hla:0.2.4'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'org.whispersystems:signal-protocol-java:2.6.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation "com.wefika:flowlayout:0.4.1"
    implementation 'net.ypresto.androidtranscoder:android-transcoder:0.3.0'
    implementation 'org.jxmpp:jxmpp-jid:1.0.1'
    implementation 'org.osmdroid:osmdroid-android:6.1.10'
    implementation 'org.hsluv:hsluv:0.2'
    implementation 'org.conscrypt:conscrypt-android:2.5.2'
    implementation 'me.drakeet.support:toastcompat:1.1.0'
    implementation "com.leinardi.android:speed-dial:2.0.1"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"

    implementation 'com.google.guava:guava:30.1.1-android'
    quicksyImplementation 'io.michaelrocks:libphonenumber-android:8.12.18'
    implementation fileTree(include: ['libwebrtc-m90.aar'], dir: 'libs')
    implementation 'org.webrtc:google-webrtc:1.0.32006'
}

ext {
    travisBuild = System.getenv("TRAVIS") == "true"
    preDexEnabled = System.getProperty("pre-dex", "true")
    abiCodes = ['armeabi-v7a': 1, 'x86': 2, 'x86_64': 3, 'arm64-v8a': 4]
}

android {
    signingConfigs {
        fnord {
            storeFile file('./fnord.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'fnord'
        }
    }
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 42015
        versionName "2.9.13"
        archivesBaseName += "-$versionName"
        applicationId 'st.kalli.conversations'
        resValue "string", "applicationId", applicationId
        resValue "string", "app_name", "Fnord"
        buildConfigField "String", "LOGTAG", "\"conver6ations\""
        signingConfig signingConfigs.fnord
    }



    configurations {
        compile.exclude group: 'org.jetbrains' , module:'annotations'
    }

    dataBinding {
        enabled true
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
        jumboMode true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions("mode", "distribution", "emoji")

    productFlavors {

        quicksy {
            dimension "mode"
            applicationId = "im.quicksy.client"
            resValue "string", "app_name", "Quicksy"
            resValue "string", "applicationId", applicationId

            def appName = "Quicksy"
            resValue "string", "app_name", appName
            buildConfigField "String", "APP_NAME", "\"$appName\"";
        }

        conversations {
            dimension "mode"
        }

        playstore {
            dimension "distribution"

        }
        free {
            dimension "distribution"

        }
        system {
            dimension "emoji"

        }
        compat {
            dimension "emoji"

        }
    }

    sourceSets {
        quicksyFreeSystem {
            java {
                srcDir 'src/quicksyFree/java'
            }
        }
        quicksyFreeCompat {
            java {
                srcDir 'src/freeCompat/java'
                srcDir 'src/quicksyFree/java'
            }
        }
        quicksyPlaystoreCompat {
            java {
                srcDir 'src/playstoreCompat/java'
                srcDir 'src/quicksyPlaystore/java'
            }
            res {
                srcDir 'src/playstoreCompat/res'
                srcDir 'src/quicksyPlaystore/res'
            }
        }
        quicksyPlaystoreSystem {
            java {
                srcDir 'src/quicksyPlaystore/java'
            }
            res {
                srcDir 'src/quicksyPlaystore/res'
            }
        }
        conversationsFreeCompat {
            java {
                srcDir 'src/freeCompat/java'
                srcDir 'src/conversationsFree/java'
            }
        }
        conversationsFreeSystem {
            java {
                srcDir 'src/conversationsFree/java'
            }
        }
        conversationsPlaystoreCompat {
            java {
                srcDir 'src/playstoreCompat/java'
                srcDir 'src/conversationsPlaystore/java'
            }
            res {
                srcDir 'src/playstoreCompat/res'
                srcDir 'src/conversationsPlaystore/res'
            }
        }
        conversationsPlaystoreSystem {
            java {
                srcDir 'src/conversationsPlaystore/java'
            }
            res {
                srcDir 'src/conversationsPlaystore/res'
            }
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }


    if (new File("signing.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("signing.properties")))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.password']
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    }

    lintOptions {
        disable 'MissingTranslation', 'InvalidPackage', 'AppCompatResource'
        abortOnError false
    }

    subprojects {

        afterEvaluate {
            if (getPlugins().hasPlugin('android') ||
                    getPlugins().hasPlugin('android-library')) {

                configure(android.lintOptions) {
                    disable 'AndroidGradlePluginVersion', 'MissingTranslation'
                }
            }

        }
    }

    packagingOptions {
        exclude 'META-INF/BCKEY.DSA'
        exclude 'META-INF/BCKEY.SF'
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
            if (baseAbiVersionCode != null) {
                output.versionCodeOverride = (100 * variant.versionCode) + baseAbiVersionCode
            }
        }

    }
}